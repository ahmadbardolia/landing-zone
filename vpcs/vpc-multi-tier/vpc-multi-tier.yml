AWSTemplateFormatVersion: '2010-09-09'

Description: Creates 1-, 2- or 3-tier hosting environment with 2 or 3 Availability Zones (AZs)

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC Configuration
      Parameters:
      - pVpcCidr
      - pNumAzs
    - Label:
        default: VPC Tier 1
      Parameters:
      - pTier1Create
      - pTier1Name
      - pTier1CreateInternetGateway
      - pTier1Subnet1Cidr
      - pTier1Subnet2Cidr
      - pTier1Subnet3Cidr
    - Label:
        default: VPC Tier 2
      Parameters:
      - pTier2Create
      - pTier2Name
      - pTier2Subnet1Cidr
      - pTier2Subnet2Cidr
      - pTier2Subnet3Cidr
    - Label:
        default: VPC Tier 3
      Parameters:
      - pTier3Create
      - pTier3Name
      - pTier3Subnet1Cidr
      - pTier3Subnet2Cidr
      - pTier3Subnet3Cidr

    ParameterLabels:
      pVpcCidr:
        default: VPC CIDR Block
      pNumAzs:
        default: Number of AZs

      pTier1Create:
        default: Tier 1 Create?
      pTier1Name:
        default: Tier 1 Name
      pTier1CreateInternetGateway:
        default: Tier 1 Create Internet Gateway?
      pTier1Subnet1Cidr:
        default: Tier 1 AZ 1 - CIDR
      pTier1Subnet2Cidr:
        default: Tier 1 AZ 2 - CIDR
      pTier1Subnet3Cidr:
        default: Tier 1 AZ 3 - CIDR

      pTier2Create:
        default: Tier 2 Create?
      pTier2Name:
        default: Tier 2 Name
      pTier2Subnet1Cidr:
        default: Tier 2 AZ 1 - CIDR
      pTier2Subnet2Cidr:
        default: Tier 2 AZ 2 - CIDR
      pTier2Subnet3Cidr:
        default: Tier 2 AZ 3 - CIDR

      pTier3Create:
        default: Tier 3 Create?
      pTier3Name:
        default: Tier 3 Name
      pTier3Subnet1Cidr:
        default: Tier 3 AZ 1 - CIDR
      pTier3Subnet2Cidr:
        default: Tier 3 AZ 2 - CIDR
      pTier3Subnet3Cidr: 
        default: Tier 3 AZ 3 - CIDR

Parameters:

  pVpcCidr:
    Type: String
    Description: CIDR Format x.x.x.x/x
    Default: 10.1.0.0/16
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    MinLength: 9
    MaxLength: 18
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
    
  pNumAzs:
    Type: String
    Default: 2
    Description: Number of subnets for each tier
    AllowedValues:
    - 2
    - 3
  
  pTier1Create:
    Type: String
    Description: Whether Tier 1 should be created
    Default: true
    AllowedValues: [true, false]
  
  pTier1Name:
    Type: String
    Description: Tier 1 Name
    Default: Tier1
  
  pTier1CreateInternetGateway:
    Type: String
    Description: Whether Tier 1 Internet Gateway should be created
    Default: true
    AllowedValues: [true, false]

  pTier2Create:
    Type: String
    Description: Whether Tier 2 should be created
    Default: true
    AllowedValues: [true, false]
  
  pTier2Name:
    Type: String
    Description: Tier 2 Name
    Default: Tier2

  pTier3Create:
    Type: String
    Description: Whether Tier 3 should be created
    Default: true
    AllowedValues: [true, false]
  
  pTier3Name:
    Type: String
    Description: Tier 3 Name
    Default: Tier3

  pTier1Subnet1Cidr:
    Type: String
    Description: Tier 1 Subnet AZ 1
    Default: 10.1.1.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    MinLength: 9
    MaxLength: 18
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

  pTier1Subnet2Cidr:
    Type: String
    Description: Tier 1 Subnet AZ 2
    Default: 10.1.2.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    MinLength: 9
    MaxLength: 18
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

  pTier1Subnet3Cidr:
    Type: String
    Description: Tier 1 Subnet AZ 3
    Default: 10.1.3.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|^$
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
   
  pTier2Subnet1Cidr:
    Type: String
    Description: Tier 2 Subnet AZ 1
    Default: 10.1.11.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    MinLength: 9
    MaxLength: 18
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
    
  pTier2Subnet2Cidr:
    Type: String
    Description: Tier 2 Subnet AZ 2
    Default: 10.1.12.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    MinLength: 9
    MaxLength: 18
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  
  pTier2Subnet3Cidr:
    Type: String
    Description: Tier 2 Subnet AZ 3
    Default: 10.1.13.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|^$
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  
  pTier3Subnet1Cidr:
    Type: String
    Description: Tier 3 Subnet AZ 1
    Default: 10.1.21.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|^$
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  
  pTier3Subnet2Cidr:
    Type: String
    Description: Tier 3 Subnet AZ 2
    Default: 10.1.22.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|^$
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
 
  pTier3Subnet3Cidr:
    Type: String
    Description: Tier 3 Subnet AZ 3
    Default: 10.1.23.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|^$
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

Conditions:

  cCreateTier1: !Equals [ !Ref 'pTier1Create', true ]
  cCreateTier2: !Equals [ !Ref 'pTier2Create', true ]
  cCreateTier3: !Equals [ !Ref 'pTier3Create', true ]
  
  cCreateTier1InternetGateway: !And [ !Equals [ !Ref 'pTier1CreateInternetGateway', true ], !Equals [ !Ref 'pTier1Create', true ] ]
  cCreateTier1InternetGateway3Azs: !And [ !Equals [ !Ref 'pTier1CreateInternetGateway', true ], !Equals [ !Ref 'pNumAzs', 3 ] ]

  cCreateTier1With3Azs: !And [ !Equals [ !Ref 'pTier1Create', true ], !Equals [ !Ref 'pNumAzs', 3 ] ]
  cCreateTier2With3Azs: !And [ !Equals [ !Ref 'pTier2Create', true ], !Equals [ !Ref 'pNumAzs', 3 ] ]
  cCreateTier3With3Azs: !And [ !Equals [ !Ref 'pTier3Create', true ], !Equals [ !Ref 'pNumAzs', 3 ] ]

Resources:

  rVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'pVpcCidr'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}'

#------------------------------------------------------------------------------
# Tier 1
#------------------------------------------------------------------------------

  rTier1InternetGateway:
    Type: AWS::EC2::InternetGateway
    Condition: cCreateTier1InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-IGW'

  rTier1InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Condition: cCreateTier1InternetGateway
    Properties:
      InternetGatewayId: !Ref 'rTier1InternetGateway'
      VpcId: !Ref 'rVpc'

  rTier1Subnet1:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier1
    Properties:
      AvailabilityZone: !Select
                    - 0
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier1Subnet1Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier1Name}-Subnet-1'
  
  rTier1Subnet2:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier1
    Properties:
      AvailabilityZone: !Select
                    - 1
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier1Subnet2Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier1Name}-Subnet-2'
 
  rTier1Subnet3:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier1With3Azs
    Properties:
      AvailabilityZone: !Select
                    - 2
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier1Subnet3Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier1Name}-Subnet-3'

  rTier1RouteTable1:
    Type: AWS::EC2::RouteTable
    Condition: cCreateTier1InternetGateway
    DependsOn: rTier1InternetGatewayAttachment
    Properties:
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier1Name}-Route-Table-1'

  rTier1RouteTable2:
    Type: AWS::EC2::RouteTable
    Condition: cCreateTier1InternetGateway
    DependsOn: rTier1InternetGatewayAttachment
    Properties:
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier1Name}-Route-Table-2'

  rTier1RouteTable3:
    Type: AWS::EC2::RouteTable
    Condition: cCreateTier1InternetGateway3Azs
    DependsOn: rTier1InternetGatewayAttachment
    Properties:
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier1Name}-Route-Table-3'

  rTier1IgwRoute1:
    Type: AWS::EC2::Route
    Condition: cCreateTier1InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'rTier1InternetGateway'
      RouteTableId: !Ref 'rTier1RouteTable1'

  rTier1IgwRoute2:
    Type: AWS::EC2::Route
    Condition: cCreateTier1InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'rTier1InternetGateway'
      RouteTableId: !Ref 'rTier1RouteTable2'

  rTier1IgwRoute3:
    Type: AWS::EC2::Route
    Condition: cCreateTier1InternetGateway3Azs
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'rTier1InternetGateway'
      RouteTableId: !Ref 'rTier1RouteTable3'

  rTier1Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: cCreateTier1InternetGateway
    Properties:
      RouteTableId: !Ref 'rTier1RouteTable1'
      SubnetId: !Ref 'rTier1Subnet1'

  rTier1Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: cCreateTier1InternetGateway
    Properties:
      RouteTableId: !Ref 'rTier1RouteTable2'
      SubnetId: !Ref 'rTier1Subnet2'

  rTier1Subnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: cCreateTier1InternetGateway3Azs
    Properties:
      RouteTableId: !Ref 'rTier1RouteTable3'
      SubnetId: !Ref 'rTier1Subnet3'

#------------------------------------------------------------------------------
# Tier 2
#------------------------------------------------------------------------------

  rTier2Subnet1:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier2
    Properties:
      AvailabilityZone: !Select
                    - 0
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier2Subnet1Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier2Name}-Subnet-1'
  
  rTier2Subnet2:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier2
    Properties:
      AvailabilityZone: !Select
                    - 1
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier2Subnet2Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier2Name}-Subnet-2'
 
  rTier2Subnet3:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier2With3Azs
    Properties:
      AvailabilityZone: !Select
                    - 2
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier2Subnet3Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier2Name}-Subnet-3'

#------------------------------------------------------------------------------
# Tier 3
#------------------------------------------------------------------------------

  rTier3Subnet1:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier3
    Properties:
      AvailabilityZone: !Select
                    - 0
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier3Subnet1Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier3Name}-Subnet-1'
  
  rTier3Subnet2:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier3
    Properties:
      AvailabilityZone: !Select
                    - 1
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier3Subnet2Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier3Name}-Subnet-2'
 
  rTier3Subnet3:
    Type: AWS::EC2::Subnet
    Condition: cCreateTier3With3Azs
    Properties:
      AvailabilityZone: !Select
                    - 2
                    - !GetAZs ''
      CidrBlock: !Ref 'pTier3Subnet3Cidr'
      VpcId: !Ref 'rVpc'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${pTier3Name}-Subnet-3'
        
Outputs:

  oVpcId:
    Description: VpcId
    Value: !Ref 'rVpc'
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'

  oTier1Subnet1:
    Description: Tier 1 Subnet 1
    Value: !Ref 'rTier1Subnet1'
    Condition: cCreateTier1
    Export:
      Name: !Sub '${AWS::StackName}-Tier1Subnet1'

  oTier1Subnet2:
    Description: Tier 1 Subnet 2
    Value: !Ref 'rTier1Subnet2'
    Condition: cCreateTier1
    Export:
      Name: !Sub '${AWS::StackName}-Tier1Subnet2'

  oTier1Subnet3:
    Description: Tier 1 Subnet 3
    Value: !Ref 'rTier1Subnet3'
    Condition: cCreateTier1With3Azs
    Export:
      Name: !Sub '${AWS::StackName}-Tier1Subnet3'

  oTier2Subnet1:
    Description: Tier 2 Subnet 1
    Value: !Ref 'rTier2Subnet1'
    Condition: cCreateTier2
    Export:
      Name: !Sub '${AWS::StackName}-Tier2Subnet1'

  oTier2Subnet2:
    Description: Tier 2 Subnet 2
    Value: !Ref 'rTier2Subnet2'
    Condition: cCreateTier2
    Export:
      Name: !Sub '${AWS::StackName}-Tier2Subnet2'

  oTier2Subnet3:
    Description: Tier 2 Subnet 3
    Value: !Ref 'rTier2Subnet3'
    Condition: cCreateTier2With3Azs
    Export:
      Name: !Sub '${AWS::StackName}-Tier2Subnet3'

  oTier3Subnet1:
    Description: Tier 3 Subnet 1
    Value: !Ref 'rTier3Subnet1'
    Condition: cCreateTier3
    Export:
      Name: !Sub '${AWS::StackName}-Tier3Subnet1'

  oTier3Subnet2:
    Description: Tier 3 Subnet 2
    Value: !Ref 'rTier3Subnet2'
    Condition: cCreateTier3
    Export:
      Name: !Sub '${AWS::StackName}-Tier3Subnet2'

  oTier3Subnet3:
    Description: Tier 3 Subnet 3
    Value: !Ref 'rTier3Subnet3'
    Condition: cCreateTier3With3Azs
    Export:
      Name: !Sub '${AWS::StackName}-Tier3Subnet3'